# SliTaz package receipt.

PACKAGE="glibc-base"
VERSION="2.24"
CATEGORY="base-system"
SHORT_DESC="GNU libc minimal libraries and UTF-8 support for SliTaz."
WEB_SITE="http://www.gnu.org/software/libc/"
MAINTAINER="pankso@slitaz.org"
LICENSE="GPL2"
HOST_ARCH="i486 arm x86_64"

WANTED="glibc"

# Locales include by default, other locales are in: locale-** and glibc-locale
DEFAULT_LOCALE="en_US en_GB"

# Handle multiarch compilation.
case "$ARCH" in
	arm*|x86_64) VERSION="2.13" WANTED="" ;;
esac

# Handle multiarch installation.
case "$SLITAZ_ARCH" in
	arm*|x86_64) VERSION="2.13" WANTED="" ;;
esac

# Rules to gen a SliTaz package suitable for Tazpkg.
#
# Full glibc is very long to compile (see package glibc for more
# informations). You can use the precompiled package available on
# SliTaz mirror to build a distro without recompiling glibc.
#

# i18n
get_locales()
{
	local path=$1
	for i in $DEFAULT_LOCALE; do
		cp $install/$path/i18n/locales/$i $fs/usr/share/i18n/locales
	done
}

genpkg_rules()
{
	case "$ARCH" in
		arm*)
			# Mkdir's.
			for dir in $(cat $stuff/mkdir.list)
			do
				mkdir -p ${fs}$dir
			done

			# Eglibc is cross compiled by cross to have a toolchain so we can
			# use these files instead of recooking it. ARM use Eglibc
			echo "Using cross compiled Eglibc..."
			install=/cross/$ARCH/sysroot

			# /usr/{bin,share} /usr/lib/gconv
			for file in $(cat $stuff/arm-files.list)
			do
				cp -a ${install}$file ${fs}$file
			done

			# libs
			for lib in libcrypt libm libc libresolv librt libutil libpthread \
				libnss_* libnsl libanl libdl
			do
				cp -a $install/lib/${lib}-*.so $fs/lib
				cp -a $install/lib/${lib}.so* $fs/lib
				cp -a $install/usr/lib/${lib}.so $fs/usr/lib
			done
			cp -a $install/lib/ld-*.so* $fs/lib
			cp -a $install/usr/lib/libc_nonshared.a $fs/usr/lib
			cp -a $install/usr/lib/libpthread_nonshared.a $fs/usr/lib
			cp $install/etc/rpc $fs/etc
			touch $fs/etc/ld.so.conf
			touch $fs/etc/ld.so.cache
			get_locales "usr/share" ;;
		x86_64)
			# Mkdir's.
			for dir in $(cat $stuff/mkdir.list)
			do
				mkdir -p ${fs}$dir
			done

			# EXPERIMENTAL: Glibc is cross compiled by cross to have a
			# toolchain so we can use these files instead of recooking it.
			echo "Using cross compiled Glibc..."
			install=/usr/cross/$ARCH

			# /usr/{bin,share} /usr/lib/gconv
			for file in $(cat $stuff/arm-files.list)
			do
				cp -a ${install}$file ${fs}/usr/$file
			done

			# /lib
			for lib in libcrypt libm libc libresolv librt libutil libpthread \
				libnss_* libnsl libanl libdl
			do
				cp -a $install/lib/${lib}-*.so $fs/lib
				cp -a $install/lib/${lib}.so* $fs/lib
			done
			cp -a $install/lib/ld-*.so* $fs/lib
			cp -a $install/lib/libc_nonshared.a $fs/lib
			cp -a $install/lib/libpthread_nonshared.a $fs/lib
			cp $install/etc/rpc $fs/etc
			touch $fs/etc/ld.so.conf
			get_locales "share"
			# Fix libraries search path
			sed -i s"|/usr/cross/$ARCH||"g $fs/lib/libc.so
			sed -i s"|/usr/cross/$ARCH||"g $fs/lib/libpthread.so ;;
		*)
			cook_copy_files \
				ld-*.so*            ld.so*            \
				libanl-*.so*        libanl.so*        \
				libc-*.so*          libc.so*          \
				libcrypt-*.so*      libcrypt.so*      \
				libdl-*.so*         libdl.so*         \
				libm-*.so*          libm.so*          \
				libnsl-*.so*        libnsl.so*        \
				libnss_compat-*.so* libnss_compat.so* \
				libnss_dns-*.so*    libnss_dns.so*    \
				libnss_files-*.so*  libnss_files.so*  \
				libpthread-*.so*    libpthread.so*    \
				libresolv-*.so*     libresolv.so*     \
				librt-*.so*         librt.so*         \
				libthread_db-*.so*  libthread_db.so*  \
				libutil-*.so*       libutil.so*       \
				\
				UNICODE.so gconv-modules ANSI_X3.110.so ISO8859-1.so \
				ISO8859-15.so UTF-16.so CP1252.so IBM437.so IBM850.so \
				\
				i18n iso14651_t1 iso14651_t1_common translit_neutral \
				translit_combining translit_circle translit_cjk_compat \
				translit_compat translit_font translit_fraction translit_narrow \
				translit_small translit_wide \
				\
				locale localedef locale.alias UTF-8.gz UTC rpc \
				$DEFAULT_LOCALE
	esac
}

# Remove an eventual locale-archive since we use directories.
pre_install()
{
	rm -f $root/usr/lib/locale/locale-archive
}

# Glibc-base is auto-updated in chroot but when cross-compiling we need
# to have /usr/cross/$ARCH search path in libc.so
post_install()
{
	# x86_64
	if echo $root | grep -q /usr/cross/x86_64; then
		echo "Fixing x86_64: $root/lib/libc.so"
		cat > $root/lib/libc.so << EOT
OUTPUT_FORMAT(elf64-x86-64)
GROUP ( $root/lib/libc.so.6 $root/lib/libc_nonshared.a AS_NEEDED ( $root/lib/ld-linux-x86-64.so.2 ) )
EOT
	fi
}
