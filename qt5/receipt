# SliTaz package receipt v2.

PACKAGE="qt5"
VERSION="5.14.2"
CATEGORY="meta"
SHORT_DESC="Cross-platform application framework."
MAINTAINER="al.bobylev@gmail.com"
LICENSE="LGPL3 GPL3"
WEB_SITE="https://www.qt.io/"
LFS="http://www.linuxfromscratch.org/blfs/view/svn/x/qt5.html"

TARBALL="qt-everywhere-src-$VERSION.tar.xz"
WGET_URL="https://download.qt.io/archive/qt/${VERSION%.*}/$VERSION/single/$TARBALL"

PATCH="Do-not-make-lack-of-SSE2-support-on-x86-32-fatal.patch"
PATCH_URL="https://anonscm.debian.org/cgit/pkg-kde/qt/qtdeclarative.git/plain/debian/patches/"

BUILD_DEPENDS="alsa-lib-dev cups-dev dbus-dev eudev-dev glib-dev 
	gst1-plugins-base-dev gtk3-dev fontconfig-dev freetype-dev 
	harfbuzz-dev icu-dev libinput-dev libjpeg-turbo-dev libpng-dev 
	libx11-dev libxcb-dev libxcomposite-dev libxkbcommon-dev 
	libxrender-dev mesa-dev openssl-dev pcre-dev sqlite3-dev tslib-dev 
	zlib-dev"

# Name split packages according to sources structure, for example:
# $src/qtgamepad/ -> qt5-gamepad
SPLIT="\
$PACKAGE-3d               $PACKAGE-base             $PACKAGE-base-gtk3        \
$PACKAGE-canvas3d         $PACKAGE-charts           $PACKAGE-connectivity     \
$PACKAGE-datavis3d        $PACKAGE-declarative      $PACKAGE-gamepad          \
$PACKAGE-graphicaleffects $PACKAGE-imageformats     $PACKAGE-location         \
$PACKAGE-multimedia       $PACKAGE-networkauth      $PACKAGE-purchasing       \
$PACKAGE-quickcontrols    $PACKAGE-quickcontrols2   $PACKAGE-remoteobjects    \
$PACKAGE-script           $PACKAGE-scxml            $PACKAGE-sensors          \
$PACKAGE-serialbus        $PACKAGE-serialport       $PACKAGE-speech           \
$PACKAGE-svg              $PACKAGE-tools            $PACKAGE-virtualkeyboard  \
$PACKAGE-wayland          $PACKAGE-webchannel       $PACKAGE-websockets       \
$PACKAGE-x11extras        $PACKAGE-xmlpatterns      $PACKAGE-base-egl         \
\
$PACKAGE-locale-ar    $PACKAGE-locale-ca    $PACKAGE-locale-cs    \
$PACKAGE-locale-da    $PACKAGE-locale-de    $PACKAGE-locale-en    \
$PACKAGE-locale-es    $PACKAGE-locale-fa    $PACKAGE-locale-fi    \
$PACKAGE-locale-fr    $PACKAGE-locale-gl    $PACKAGE-locale-he    \
$PACKAGE-locale-hu    $PACKAGE-locale-it    $PACKAGE-locale-ja    \
$PACKAGE-locale-ko    $PACKAGE-locale-lt    $PACKAGE-locale-lv    \
$PACKAGE-locale-pl    $PACKAGE-locale-pt    $PACKAGE-locale-ru    \
$PACKAGE-locale-sk    $PACKAGE-locale-sl    $PACKAGE-locale-sv    \
$PACKAGE-locale-uk    $PACKAGE-locale-zh_CN $PACKAGE-locale-zh_TW \
\
$PACKAGE-doc $PACKAGE-dev"

compile_rules()
{
	export QT5PREFIX=/usr # or /opt/qt5

	if [ "$QT5PREFIX" == '/usr' ]
	  then
		QT5OPTS="\
		-archdatadir    /usr/lib/qt5 \
		-bindir         /usr/bin \
		-plugindir      /usr/lib/qt5/plugins \
		-importdir      /usr/lib/qt5/imports \
		-headerdir      /usr/include/qt5 \
		-datadir        /usr/share/qt5 \
		-docdir         /usr/share/doc/qt5 \
		-translationdir /usr/share/qt5/translations \
		-examplesdir    /usr/share/doc/qt5/examples \
"
	fi

#	echo "INCLUDEPATH += /usr/include/openssl-1.0" >> qtbase/src/network/network.pro
#	export OPENSSL_LIBS='-L/usr/lib/openssl-1.0 -lssl -lcrypto'
#
#	[ -s $SRC/$PATCH ] || wget -O $SRC/$PATCH $PATCH_URL$PATCH
#	cd $src/qtdeclarative
#	cp $SRC/$PATCH ./$PATCH
#	patch -p1 -i $PATCH
#	cd ..
#
#	# Build qmake (and all following things with it) using existing CFLAGS and LDFLAGS
#	sed -i -e "s|^\(QMAKE_CFLAGS_RELEASE.*\)|\1 $CFLAGS -DQT_MATH_H_DEFINES_MACROS=1|" \
#		qtbase/mkspecs/common/gcc-base.conf
#	sed -i -e "s|^\(QMAKE_LFLAGS_RELEASE.*\)|\1 $LDFLAGS|" \
#		qtbase/mkspecs/common/g++-unix.conf
#
#	# Fix missing private includes https://bugreports.qt.io/browse/QTBUG-37417
#	sed -e '/CMAKE_NO_PRIVATE_INCLUDES\ \=\ true/d' -i \
#		qtbase/mkspecs/features/create_cmake.prf

	./configure			\
		-prefix $QT5PREFIX	\
		$QT5OPTS		\
		-sysconfdir /etc/xdg	\
		-confirm-license	\
		-opensource		\
		-dbus-linked		\
		-openssl-linked		\
		-system-harfbuzz	\
		-system-sqlite		\
		-nomake examples	\
		-no-rpath		\
		-no-sse2		\
		-skip qtwebengine &&
	make -j 1 &&
	make INSTALL_ROOT=$install install || return 1

#	find $install$QT5PREFIX/lib/pkgconfig -name '*.pc' \
#		-exec perl -pi -e "s, -L$PWD/?\S+,,g" {} \; &&
#	find $install$QT5PREFIX/ -name qt_lib_bootstrap_private.pri \
#		-exec sed -i -e "s:$PWD/qtbase:/$QT5PREFIX/lib/:g" {} \; &&
	find $install$QT5PREFIX/ -name '*.prl' \
		-exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' '{}' \;

	QT5BINDIR=$QT5PREFIX/bin

	install -v -dm755 $install/usr/share/pixmaps/

	install -v -Dm644 qttools/src/assistant/assistant/images/assistant-128.png \
			$install/usr/share/pixmaps/assistant-qt5.png
	install -v -Dm644 qttools/src/designer/src/designer/images/designer.png \
			$install/usr/share/pixmaps/designer-qt5.png
	install -v -Dm644 qttools/src/linguist/linguist/images/icons/linguist-128-32.png \
			$install/usr/share/pixmaps/linguist-qt5.png
	install -v -Dm644 qttools/src/qdbus/qdbusviewer/images/qdbusviewer-128.png \
			$install/usr/share/pixmaps/qdbusviewer-qt5.png

	mkdir -p $install/usr/share/applications
	for i in $stuff/apps/*.desktop.in
	  do
		sed "s|@QT5BINDIR@|$QT5BINDIR|" $i > $install/usr/share/applications/$(basename $i .in)
	  done

	for file in moc uic rcc qmake lconvert lrelease lupdate
	  do
		if [ "$QT5BINDIR" == '/usr/bin' ]
		  then
			ln -sfvn $file			$install/usr/bin/$file-qt5
		else
			ln -sfvn $QT5BINDIR/$file	$install/usr/bin/$file-qt5
		fi
	  done

	# tweak permissions
	find $install -type f -perm 664 -exec chmod 644 '{}' \;
	find $install -type f -perm 775 -exec chmod 755 '{}' \;
}

genpkg_rules()
{
	# How to split Qt5?
	# It contains: 41 executables in bin/, 61 different libraries in lib/,
	# 27 folders in plugins/, 27 languages in translations/.
	# 156 packages for Qt5? It's a bit too much, isn't it?
	#
	# Let's deep into $src...
	# Each folder here is a module (with rare exceptions). 41 pieces.
	# Let us use these folders as a landmark to make Qt5 packages.
	# Each folder may contain: executables (examine bin/ subfolder), libraries
	# (lib/), plugins (plugins/), and qml (not sure what is it, but examine
	# qml/ subfolder). Note, some qml directories may be shared across different
	# Qt5 packages, so add only sub(-sub(-sub))-folders that contain "qmldir"
	# inside it.
	#
	# Let's begin.
	#
	case $PACKAGE in
		qt5)
			COOKOPTS="!pixmaps !menus"
			DEPENDS="$SPLIT";;
		qt5-locale-*)
			la=${PACKAGE#qt5-locale-}
			copy *_$la.qm
			case $la in
				ar) lo='Arabic';;		ca) lo='Catalan';;
				cs) lo='Czech';;		da) lo='Danish';;
				de) lo='German';;		en) lo='English';;
				es) lo='Spanish';;		fa) lo='Persian';;
				fi) lo='Finnish';;		fr) lo='French';;
				gl) lo='Galician';;		he) lo='Hebrew';;
				hu) lo='Hungarian';;		it) lo='Italian';;
				ja) lo='Japanese';;		ko) lo='Korean';;
				lt) lo='Lithuanian';;		lv) lo='Latvian';;
				pl) lo='Polish';;		pt) lo='Portuguese';;
				ru) lo='Russian';;		sk) lo='Slovak';;
				sl) lo='Slovenian';;		sv) lo='Swedish';;
				uk) lo='Ukrainian';;		zh_CN) lo='Chinese simplified';;
				zh_TW) lo='Chinese traditional';;
			esac
			CAT="localization|$lo locale"
			DEPENDS=" ";;
		qt5-doc)
			copy doc/
			CAT="docs|documentation"
			DEPENDS="qt5-base";;
		qt5-dev)
			copy @dev qt5/include/ mkspecs/ *.cmake *.prl qmake.conf
			# Binaries from qt5-base:
			copy fixqt4headers.pl moc moc-qt5 qdbuscpp2xml qdbusxml2cpp qlalr \
			qmake qmake-qt5 rcc rcc-qt5 syncqt.pl uic uic-qt5 \
			builtins.qmltypes
			DEPENDS="qt5";;
		qt5-base-gtk3)
			copy libqgtk3.so
			CAT="development|GTK+3 theme support"
			DEPENDS="qt5-base atk libcairo gdk-pixbuf glib gtk3 mesa pango \
			libx11 libxext";;
		qt5-base-egl)
			copy libQt5Egl*so*
			CAT="development|EGL libs"
			DEPENDS="qt5-base mesa mesa-libegl mesa-libgbm";;
		*)
			# examine folders in $src to understand what we need to copy from $install
			examine="$src/qt${PACKAGE#qt5-}"

			unset binaries libraries plugins qml

			# output "base names" of files found in bin/ subfolder
			[ -d "$examine/bin" ] &&
			binaries=$(find $examine/bin -type f | awk -F/ '{print $NF}')

			# the same thing with lib/
			[ -d "$examine/lib" ] &&
			libraries=$(find $examine/lib -name '*.so' | awk -F/ '{print $NF}')

			# libraries in plugins/ sub-folder
			[ -d "$examine/plugins" ] &&
			plugins=$(find $examine/plugins -name '*.so' | awk -F/ '{print $NF}')

			# libraries in qml/ sub-folder
			[ -d "$examine/qml" ] &&
			qml=$(cd $examine; find ./qml -name 'qmldir' | sed 's|^./||; s|qmldir$||')

			copy $binaries $plugins $(
				for i in $libraries; do echo "$i*"; done
				for i in $qml; do echo $i; done)
			;;
	esac
	case $PACKAGE in
		qt5-3d)
			CAT="development|3D module"
			DEPENDS="qt5-base qt5-declarative qt5-gamepad mesa zlib";;

		qt5-base)
			# Move binaries (that required for compiling the packages) to qt5-dev
			rm -r $fs/usr/bin

			# Move to qt5-base-gtk3 because only it depends on GTK3 and friends
			rm $fs/usr/lib/qt5/plugins/platformthemes/libqgtk3.so

			# Move to qt5-base-egl
			rm -f $fs/usr/lib/libQt5Egl*

			CAT="development|Base module"
			DEPENDS="dbus eudev fontconfig freetype glib icu openssl libcups \
			libdrm libharfbuzz libicu libinput libjpeg-turbo libpng \
			libsqlite3 libxkbcommon libxkbcommon-x11 mesa \
			mtdev tslib libice libsm libx11 libxext \
			libxi libxcb zlib libatomic";;
		qt5-canvas3d)
			CAT="development|Canvas3D module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-charts)
			CAT="development|Charts module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-connectivity)
			CAT="development|Connectivity module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-datavis3d)
			CAT="development|DataVisualization module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-declarative)
			CAT="development|Declarative module"
			DEPENDS="qt5-base qt5-remoteobjects qt5-xmlpatterns mesa";;
		qt5-gamepad)
			CAT="development|Gamepad module"
			DEPENDS="qt5-base qt5-declarative eudev mesa";;
		qt5-graphicaleffects)
			CAT="development|GraphicalEffects module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-imageformats)
			CAT="development|imageformats module"
			DEPENDS="qt5-base mesa libtiff";;
		qt5-location)
			CAT="development|Location module"
			DEPENDS="qt5-base qt5-declarative icu openssl libicu openssl \
			mesa zlib";;
		qt5-multimedia)
			CAT="development|Multimedia module"
			DEPENDS="qt5-base qt5-declarative alsa-lib glib gst1-plugins-base \
			gstreamer1 mesa";;
		qt5-networkauth)
			CAT="development|NetworkAuth module"
			DEPENDS="qt5-base mesa";;
		qt5-purchasing)
			CAT="development|Purchasing module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-quickcontrols)
			CAT="development|QuickControls module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-quickcontrols2)
			CAT="development|QuickControls2 module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-remoteobjects)
			rm -r $fs/usr/lib/qt5/ # interception with qt5-declarative
			CAT="development|RemoteObjects module"
			DEPENDS="qt5-base";;
		qt5-script)
			CAT="development|Script module"
			DEPENDS="qt5-base mesa";;
		qt5-scxml)
			CAT="development|SCXML module"
			DEPENDS="qt5-base qt5-declarative";;
		qt5-sensors)
			CAT="development|Sensors module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-serialbus)
			CAT="development|SerialBus module"
			DEPENDS="qt5-base qt5-serialport";;
		qt5-serialport)
			CAT="development|SerialPort module"
			DEPENDS="qt5-base eudev";;
		qt5-speech)
			CAT="development|Speech module"
			DEPENDS="qt5-base";;
		qt5-svg)
			CAT="development|SVG module"
			DEPENDS="qt5-base mesa zlib";;
		qt5-tools)
			copy applications/ pixmaps/ phrasebooks/ lconvert-qt5 lrelease-qt5 \
			lupdate-qt5
			CAT="development|Tools module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-virtualkeyboard)
			CAT="development|VirtualKeyboard module"
			DEPENDS="qt5-base qt5-declarative qt5-svg mesa libxcb";;
		qt5-wayland)
			CAT="development|Wayland module"
			DEPENDS="qt5-base qt5-declarative fontconfig freetype glib \
			libxkbcommon mesa mesa-libegl mesa-libwayland-egl wayland \
			libx11 libxcomposite libxext";;
		qt5-webchannel)
			CAT="development|WebChannel module"
			DEPENDS="qt5-base qt5-declarative mesa";;
		qt5-websockets)
			CAT="development|WebSockets module"
			DEPENDS="qt5-base qt5-declarative";;
		qt5-x11extras)
			CAT="development|X11Extras module"
			DEPENDS="qt5-base mesa";;
		qt5-xmlpatterns)
			CAT="development|XmlPatterns module"
			DEPENDS="qt5-base";;
	esac
}
