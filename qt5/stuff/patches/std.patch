--- a/qtbase/src/corelib/global/qnumeric_p.h
+++ b/qtbase/src/corelib/global/qnumeric_p.h
@@ -101,12 +101,12 @@
 static inline bool isinf(float f) { return math_h_isinf(f); }
 static inline bool isfinite(float f) { return math_h_isfinite(f); }
 #else
-static inline bool isnan(double d) { return std::isnan(d); }
-static inline bool isinf(double d) { return std::isinf(d); }
-static inline bool isfinite(double d) { return std::isfinite(d); }
-static inline bool isnan(float f) { return std::isnan(f); }
-static inline bool isinf(float f) { return std::isinf(f); }
-static inline bool isfinite(float f) { return std::isfinite(f); }
+static inline bool isnan(double d) { return isnan(d); }
+static inline bool isinf(double d) { return isinf(d); }
+static inline bool isfinite(double d) { return isfinite(d); }
+static inline bool isnan(float f) { return isnan(f); }
+static inline bool isinf(float f) { return isinf(f); }
+static inline bool isfinite(float f) { return isfinite(f); }
 #endif
 }
 
--- a/qtbase/src/corelib/kernel/qvariant.cpp
+++ b/qtbase/src/corelib/kernel/qvariant.cpp
@@ -3486,8 +3486,8 @@
         return 0;
 
     // only do fuzzy comparisons for finite, non-zero numbers
-    int c1 = std::fpclassify(r1);
-    int c2 = std::fpclassify(r2);
+    int c1 = fpclassify(r1);
+    int c2 = fpclassify(r2);
     if ((c1 == FP_NORMAL || c1 == FP_SUBNORMAL) && (c2 == FP_NORMAL || c2 == FP_SUBNORMAL)) {
         if (qFuzzyCompare(r1, r2))
             return 0;
