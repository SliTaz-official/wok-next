# SliTaz package receipt v2.

PACKAGE="glib"
VERSION="2.50.3"
CATEGORY="x-window"
SHORT_DESC="C routines"
MAINTAINER="pankso@slitaz.org"
LICENSE="GPL2"
WEB_SITE="https://developer.gnome.org/glib/"
HOST_ARCH="i486 arm"

TARBALL="$PACKAGE-$VERSION.tar.xz"
WGET_URL="$GNOME_MIRROR/$PACKAGE/${VERSION%.*}/$TARBALL"

BUILD_DEPENDS="perl indent python zlib-dev libffi-dev gettext-tools elfutils-dev \
pcre-dev gtk-doc libxslt libxml2-tools dbus-dev util-linux-mount-dev"
BUILD_DEPENDS_arm="pcre-dev libffi-dev zlib-dev elfutils-dev libxml2-dev"
SPLIT="glib-dev"

# Rules to configure and make the package.
compile_rules()
{
	case "$ARCH" in
		i?86)
			./configure \
			--sysconfdir=/etc \
			--with-pcre=system \
			--enable-static \
			$CONFIGURE_ARGS ;;
		arm*)
			# Native ARM build --> if ARCH != SLITAZ_ARCH ?
			export LD_LIBRARY_PATH=/cross/$ARCH/sysroot/usr/lib:/usr/lib:/lib
			export PKG_CONFIG_PATH=/cross/$ARCH/sysroot/usr/lib/pkgconfig
			export LDFLAGS="$LDFLAGS -L/cross/$ARCH/sysroot/usr/lib -Wl,-rpath=/cross/$ARCH/sysroot/usr/lib"

			# Glib
			export glib_cv_stack_grows=${glib_cv_stack_grows=no}
			export glib_cv_uscore=${glib_cv_uscore=no}
			export ac_cv_func_posix_getpwuid_r=${ac_cv_func_posix_getpwuid_r=no}
			export ac_cv_func_posix_getgrgid_r=${ac_cv_func_posix_getgrgid_r=no}
			export ac_cv_type_long_long=${ac_cv_type_long_long=yes}
			CC="$HOST_SYSTEM-gcc" \
			LIBTOOL="$HOST_SYSTEM-libtool" \
			./configure \
				--sysconfdir=/etc \
				--with-pcre=system \
				--build=i486-slitaz-linux \
				--host=$ARCH-slitaz-linux-gnueabi \
				--enable-shared=yes \
				--enable-static=yes \
				--disable-rpath ;;
	esac &&
	make &&
	make DESTDIR=/ install &&
	make DESTDIR=$DESTDIR install

	# we need `make DESTDIR=/ install` first because at the some stage (usual)
	# `make install` need file glib-2.0.pc installed in the FS.
	# `cook` is sure than this error is fatal.
	# Installing into / is safe since we working in the Aufs layer...
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	case $PACKAGE in
		glib)
			copy @std
			# Python codegen, tester, Perl mkenums --> glib-dev
			cd $fs/usr/bin
			rm gdbus-codegen gtester* glib-mkenums glib-gettextize
			rm -r $fs/usr/share
			DEPENDS="elfutils libffi pcre util-linux-blkid util-linux-mount \
			util-linux-uuid zlib"
			;;
		glib-dev)
			copy @std @dev
			remove_already_packed
			DEPENDS="glib glibc-dev libffi-dev pcre-dev util-linux-blkid-dev \
			util-linux-mount-dev util-linux-uuid-dev zlib-dev perl python"
			;;
	esac
}
