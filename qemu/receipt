# SliTaz package receipt v2.

PACKAGE="qemu"
VERSION="2.0.2"
CATEGORY="misc"
SHORT_DESC="General-purpose full virtualizer for x86 hardware."
MAINTAINER="pascal.bellard@slitaz.org"
LICENSE="GPL2"
TARBALL="$PACKAGE-$VERSION.tar.bz2"
WEB_SITE="http://qemu.org"
WGET_URL="http://wiki.qemu.org/download/$TARBALL"

BUILD_DEPENDS="gettext perl alsa-lib-dev gnutls-dev libsdl-dev bluez-dev \
libtasn1-dev vde2-dev curl-dev attr-dev util-linux-uuid-dev \
glib-dev autoconf automake libtool bison flex libusb-dev ncurses-dev"
SPLIT="qemu qemu-arm qemu-mips qemu-x86_64"

# Rules to configure and make the package.
compile_rules()
{
	mkdir -p $DESTIDR/usr/share/qemu/ia32

	[ -s $SOURCES_REPOSITORY/$UEFIZIP ] || wget -P $SOURCES_REPOSITORY \
		http://netassist.dl.sourceforge.net/project/edk2/OVMF/$UEFIZIP
	unzip $SOURCES_REPOSITORY/$UEFIZIP OVMF.fd -d $DESTIDR/usr/share/qemu/ia32

	patch -p0 < $stuff/cloop.u

	TARGET="i386-softmmu, x86_64-softmmu, \
	arm-softmmu, ppc-softmmu, mips-softmmu"

	export LDFLAGS="$LDFLAGS -Wl,--copy-dt-needed-entries"
	#--cross-prefix= --host-cc=
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--enable-sdl \
		--enable-curses \
		--audio-drv-list=alsa,oss \
		--target-list="$TARGET" \
		--cc=$BUILD_SYSTEM-gcc &&
	make && make DESTDIR=$DESTDIR install
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	case $PACKAGE in
	qemu)
		UEFIZIP="OVMF-IA32-r15214.zip"
		EXTRA_SOURCE_FILES="$UEFIZIP"
		TAGS="virtualization emulator"
		DEPENDS="alsa-lib gnutls libsdl bluez libtasn1 libsasl vde2 \
			libcurl ncurses attr util-linux-uuid glib libusb"
		mkdir -p $fs/usr/bin $fs/usr/share

		# /etc/qemu is for x86_64
		#cp -a $install/etc $fs

		cp -a $install/usr/bin/qemu-*-i386 $fs/usr/bin
		cp -a $install/usr/bin/qemu-ga $fs/usr/bin
		cp -a $install/usr/bin/qemu-io $fs/usr/bin
		cp -a $install/usr/bin/qemu-img $fs/usr/bin
		cp -a $install/usr/bin/qemu-nbd $fs/usr/bin

		cp -a $install/usr/share/qemu $fs/usr/share

		# Remove unneeded bios binaries
		rm -f $fs/usr/share/qemu/*ppc*
		rm -f $fs/usr/share/qemu/*sparc*

		# Create qemu symlink
		cd $fs/usr/bin && ln -s qemu-system-i386 $PACKAGE
		;;
	qemu-arm)
		CAT="misc|General-purpose full virtualizer for ARM hardware."
		TAGS="virtualization"
		DEPENDS="qemu"
		mkdir -p $fs/usr/bin
		cp -a $install/usr/bin/qemu-*${PACKAGE#qemu-} $fs/usr/bin
		cd $fs/usr/bin && ln -s qemu-system-${PACKAGE#qemu-} $PACKAGE
		;;
	qemu-mips)
		CAT="misc|General-purpose full virtualizer for MIPS hardware."
		TAGS="virtualization"
		DEPENDS="qemu"
		mkdir -p $fs/usr/bin
		cp -a $install/usr/bin/qemu-*${PACKAGE#qemu-} $fs/usr/bin
		cd $fs/usr/bin && ln -s qemu-system-${PACKAGE#qemu-} $PACKAGE
		;;
	qemu-x86_64)
		CAT="misc|General-purpose full virtualizer for X86_64 CPU."
		TAGS="virtualization"
		UEFIZIP="OVMF-X64-r15214.zip"
		EXTRA_SOURCE_FILES="$UEFIZIP"
		DEPENDS="qemu"
		mkdir -p $fs/usr/bin $fs/usr/share/qemu/x64 $fs/etc
		cp -a $install/etc/qemu $fs/etc
		cp -a $install/usr/bin/qemu-*${PACKAGE#qemu-} $fs/usr/bin
		cd $fs/usr/bin && ln -s qemu-system-${PACKAGE#qemu-} $PACKAGE
		[ -s $SOURCES_REPOSITORY/$UEFIZIP ] || wget -P $SOURCES_REPOSITORY \
			http://netassist.dl.sourceforge.net/project/edk2/OVMF/$UEFIZIP
		unzip $SOURCES_REPOSITORY/$UEFIZIP OVMF.fd -d $fs/usr/share/qemu/x64
		;;
	esac
}
