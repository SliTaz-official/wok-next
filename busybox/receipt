# SliTaz package receipt v2.

PACKAGE="busybox"
VERSION="1.27.2"
CATEGORY="base-system"
SHORT_DESC="Tiny versions of UNIX utilities"
MAINTAINER="pascal.bellard@slitaz.org"
LICENSE="GPL2"
WEB_SITE="https://busybox.net/"

TARBALL="$PACKAGE-$VERSION.tar.bz2"
WGET_URL="${WEB_SITE}downloads/$TARBALL"

BUILD_DEPENDS="patch bzip2 gettext-dev perl pam-dev libtirpc-dev" # uclibc-cross-compiler-i486 musl-libc-dev dietlibc
case "$ARCH" in
	x86_64) SPLIT="$PACKAGE-pam:pam";;
	*)      SPLIT="$PACKAGE-pam:pam ssfs-busybox:ssfs" # $PACKAGE-boot:boot $PACKAGE-static:static
	        ;;
esac

compile_rules() {
	export CPPFLAGS="$CPPFLAGS $(pkg-config --cflags libtirpc)"
	case "$SET" in
		'')
			cp $stuff/.config $src
			make oldconfig &&
			make &&
			make install || return 1
			strip --strip-unneeded -R .eh_frame -R .eh_frame_hdr \
				$src/_install/bin/busybox

			# Making translations
			make -C $stuff/po install

			cook_pick_manpages $src/docs/busybox.1
			cook_pick_docs \
				$src/docs/*.txt \
				$src/docs/*.htm* \
				$src/docs/cgi

			cp -a $src/_install/* $install; rm -rf $src/_install

			[ -e $install/sbin/ip ] && ln -s busybox $install/bin/ip
			rm -f $install/bin/bbconfig $install/usr/bin/ar
			mkdir -p \
				$install/etc/init.d \
				$install/var/spool/cron/crontabs \
				$install/var/spool/lpd \
				$install/var/lib/misc \
				$install/etc/modprobe.d \
				$install/usr/share/udhcpc

			# Busybox config files
			cp -a $stuff/etc/* $install/etc
			chown -R 0.0 $install/etc
			chmod 600 $install/etc/busybox.conf

			# Daemon scripts
			cp $stuff/daemon $install/etc/init.d
			for i in crond dnsd ftpd httpd inetd lpd klogd ntpd syslogd \
			         telnetd tftpd udhcpd zcip; do
				grep -qi "config_$i=y" $stuff/.config &&
				ln -s daemon $install/etc/init.d/$i
			done
			rm $install/linuxrc

			# Udhcpc stuff
			install -m755 $stuff/udhcp.script $install/usr/share/udhcpc/default.script

			# Httpd stuff (httphelper.sh found in slitaz-base-files package)
			ln -s /usr/lib/slitaz/httphelper.sh $install/usr/bin/httpd_helper.sh
			cp -r $stuff/www $install/var

			# Update copyright year
			grep -rl 'YEAR' $install/var/www | xargs sed -i "s|YEAR|$(date +%Y)|"
			;;

		pam)
			sed 's|# CONFIG_PAM is not set|CONFIG_PAM=y|' $stuff/.config > $src/.config
			make oldconfig &&
			make || return 1
			strip --strip-unneeded -R .eh_frame -R .eh_frame_hdr busybox

#			mv docs/busybox.1 docs/busybox.pam.1
			mkdir -p \
				$install/bin/ \
				$install/etc/pam.d/
			cp -a $src/busybox $install/bin
			cp $stuff/login $install/etc/pam.d/
			;;

		ssfs)
			# WARNING! This branch not tested yet!
			#
			rootfs="$src/ssfs-busybox/usr/share/ssfs/rootfs"
			mkdir -p $rootfs/etc
			cp $stuff/.config-ssfs $src/.config
			make oldconfig &&
			make busybox &&
			make CONFIG_PREFIX=$rootfs install || return 1
			cp $stuff/busybox.conf-ssfs $rootfs/etc/busybox.conf
			chown -R 0.0 $rootfs/etc
			chmod 0600 $rootfs/etc/busybox.conf
			chmod 4755 $rootfs/bin/busybox
			;;

		static)
			# WARNING! This branch not tested yet!
			#
			# prepare busybox-static package
			if [ -n "$(/usr/bin/uclibc-i486-gcc --version 2>/dev/null)" ]; then
				echo 'Making busybox-uclibc'
				cp $stuff/.config-static $src/.config
				sed -i 's|# CONFIG_ASH_INTERNAL_GLOB is not set|CONFIG_ASH_INTERNAL_GLOB=y|' $src/.config
				make oldconfig &&
				make || return 1
				cp busybox busybox-static
				mv busybox busybox-uclibc
				mv -f docs/busybox.1 docs/busybox.static.1
			fi

			if [ -x '/usr/bin/musl-gcc' ]; then
				echo 'Making busybox-musl'
				# prepare busybox-musl package
				cp $stuff/.config-static $src/.config
				sed -i 's|uclibc-i486-||' $src/.config
				make oldconfig &&
				make CC=musl-gcc || return 1
				mv busybox busybox-musl
				mv -f docs/busybox.1 docs/busybox.static.1
			fi

			if [ -x '/usr/lib/diet/bin/diet' ]; then
				echo 'Making busybox-diet'
				# prepare busybox-diet package
				cp $stuff/.config-static $src/.config
				sed -i 's|uclibc-i486-||;
						s|CFLAGS="|&-D_BSD_SOURCE |;
						s|LDFLAGS="|&-Wl,--allow-multiple-definition |;
						s|LDLIBS="|&compat tirpc |' $src/.config
				make oldconfig &&
				make CC="/usr/lib/diet/bin/diet gcc" || return 1
				mv busybox busybox-diet
				mv -f docs/busybox.1 docs/busybox.static.1
			fi
			;;
	esac
}

# Cross compilation check.
testsuite() {
	readelf -h $WOK/busybox/install/bin/busybox
}

genpkg_rules() {
	case $PACKAGE in
		busybox)
			copy @std *.mo
			DEPENDS="slitaz-base-files glibc-base ncurses libtirpc"
			CONFIG_FILES="/etc/dnsd.conf /etc/inetd.conf /etc/udhcpd.conf \
			/etc/resolv.conf /etc/httpd.conf"
			;;
		busybox-pam)
			copy @std
			CAT="base-system|with PAM support"
			DEPENDS="busybox libtirpc pam"
			CONFIG_FILES="/etc/pam.d"
			PROVIDE="busybox:pam"
			;;
		ssfs-busybox)
			# NOTE: We install files in Ssfs data directory to always have ready
			# to create chroot on the server and provide an easy way to update
			# the vdisk. We don't do a static build, we need some shared lib in
			# the chroot anyway. Busybox is configured to not use /usr and with
			# a minimal set of applets.

			CAT="base-system|for Ssfs virtual disk minimal chroot"
			rootfs=$fs/usr/share/ssfs/rootfs
			cp -a $src/ssfs-busybox/* $fs
			;;
		busybox-boot)
			jslinux=false
			CAT="base-system|for core-5in1/boot flavor"
			DEPENDS="linux syslinux"
			mkdir -p \
				$fs/usr/share/boot/bin \
				$fs/usr/share/boot/dev

			CHOICE='static'
			for i in uclibc musl diet; do
				[ -x "$src/busybox-$i" ] || continue
				[ -x "$src/busybox-$CHOICE" ] &&
					[ $(stat -c %s $src/busybox-$i) -ge \
					  $(stat -c %s $src/busybox-$CHOICE) ] &&
					continue
				CHOICE="$i"
			done
			cp -a $src/busybox-$CHOICE $fs/usr/share/boot/bin/busybox

			chmod   4755 $fs/usr/share/boot/bin/busybox
			mknod -m 660 $fs/usr/share/boot/dev/console c 5 1
			mknod -m 771 $fs/usr/share/boot/dev/null    c 1 3
			mknod -m 660 $fs/usr/share/boot/dev/tty     c 5 0
			mknod -m 660 $fs/usr/share/boot/dev/tty1    c 4 1
			if $jslinux; then
				mknod -m 644 $fs/usr/share/boot/dev/clipboard c 10 231
				mknod -m 660 $fs/usr/share/boot/dev/ttyS0     c  4  64
			fi

			cp $stuff/init $fs/usr/share/boot/init
			$jslinux || sed -i '/jslinux/d' $fs/usr/share/boot/init
			chmod +x $fs/usr/share/boot/init

			( cd $fs/usr/share/boot; find bin dev init | cpio -o -H newc > initrd )
			rm -rf \
				$fs/usr/share/boot/bin \
				$fs/usr/share/boot/dev \
				$fs/usr/share/boot/init
			;;
		busybox-static)
			CAT="base-system|static version"
			DEPENDS=" "
			mkdir -p $fs/usr/share/boot

			CHOICE='static'
			for i in uclibc musl diet; do
				[ -x "$src/busybox-$i" ] || continue
				[ -x "$src/busybox-$CHOICE" ] &&
					[ $(stat -c %s $src/busybox-$i) -ge \
					  $(stat -c %s $src/busybox-$CHOICE) ] &&
					continue
				CHOICE="$i"
			done
			cp -a $src/busybox-$CHOICE $fs/usr/share/boot/busybox-static
			;;
	esac
}

# GNU utils stuff.
pre_install_busybox() {
	local i
	[ -s $1/etc/resolv.conf ] &&
	cp -a $1/etc/resolv.conf $1/etc/resolv.conf-busybox-install
	answer=''
	for i in $(sed '/busybox$/d; /bin\//!d' "$1$INSTALLED/$PACKAGE/files.list"); do
		[ -f "$1$i" ] || continue
		if [ -z "$answer" ]; then
			echo
			confirm 'Keep installed GNU utilities?' y || break
			answer='Y'
		fi
		cp -a "$1$i" "$1$i-busybox-install"
	done
}

post_install_busybox() {
	local i
	[ -f $1/etc/resolv.conf-busybox-install ] &&
	mv -f $1/etc/resolv.conf-busybox-install $1/etc/resolv.conf
	for i in $($1/bin/busybox --list-full); do
		[ -f "$1/$i-busybox-install" ] || continue
		mv "$1/$i-busybox-install" "$1/$i"
	done
	chmod 4755 "$1/bin/busybox"

	touch "$1/etc/daemons.conf"
	# /etc/daemons.conf (tftp + dnsd + httpd may not be present)
	if ! grep -q ^DNSD_OPTIONS "$1/etc/daemons.conf"; then
		cat >> "$1/etc/daemons.conf" <<EOF
# Domain name server options.
DNSD_OPTIONS="-d"

EOF
	fi
	if ! grep -q ^TFTPD_OPTIONS $1/etc/daemons.conf; then
		cat >> "$1/etc/daemons.conf" <<EOF
# Tftp daemon options.
TFTPD_OPTIONS="-r /boot"

EOF
	fi
}

# We can't remove this package!
pre_remove_busybox() {
	return 1
}

pre_remove_busybox_pam() {
	# We install non-pam busybox to replace busybox-pam.
	tazpkg get-install busybox --forced

	# We remove /bin/busybox from the file.list of busybox-pam.
	# This way, the non-pam busybox we just installed will not be
	# removed.
	sed '/\/bin\/busybox/d' \
		-i /var/lib/tazpkg/installed/busybox-pam/files.list
}

post_install_busybox_pam() {
	chmod 4755 "$1/bin/busybox"
}

post_install_busybox_static() {
	chmod 4755 "$1/usr/share/boot/busybox-static"
}
