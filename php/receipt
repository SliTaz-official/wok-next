# SliTaz package receipt v2.

PACKAGE="php"
VERSION="7.4.4"
CATEGORY="development"
SHORT_DESC="PHP web programming language"
MAINTAINER="maintainer@slitaz.org"
LICENSE="BSD"
WEB_SITE="https://www.php.net/"

TARBALL="$PACKAGE-$VERSION.tar.xz"
WGET_URL="https://www.php.net/distributions/$TARBALL"

BUILD_DEPENDS="apache apache-dev apr-dev apr-util-dev c-client 
	coreutils-conditions curl-dev cyrus-sasl-dev gettext-dev 
	jpeg-dev libldap libmcrypt-dev libmysqlclient libpng-dev 
	libunixODBC libvpx-dev libxml2-dev mhash-dev mysql-dev 
	net-snmp-dev openldap-dev openssl-dev perl postgresql-dev 
	re2c sed sqlite3-dev unixODBC-dev zlib-dev"
SPLIT="\
$PACKAGE-apache    $PACKAGE-cherokee $PACKAGE-cli     $PACKAGE-common \
$PACKAGE-curl      $PACKAGE-dba      $PACKAGE-dev     $PACKAGE-gd \
$PACKAGE-imap      $PACKAGE-ldap     $PACKAGE-mcrypt  $PACKAGE-mysqli \
$PACKAGE-mysql     $PACKAGE-odbc     $PACKAGE-openssl $PACKAGE-pdo-mysql \
$PACKAGE-pdo-pgsql $PACKAGE-pear     $PACKAGE-pgsql   $PACKAGE-snmp \
$PACKAGE-soap      $PACKAGE-sqlite"

compile_rules()
{
	ARCH_ARGS="\
	--enable-mbstring				\
	--enable-sockets				\
	--enable-ftp					\
	--enable-zip					\
	--enable-calendar				\
	--enable-exif					\
	--config-cache					\
	--enable-dba=shared				\
	--with-config-file-path=/etc			\
	--with-zlib					\
	--with-gettext					\
	--with-mcrypt=shared,/usr			\
	--with-mysql=shared,/usr			\
	--with-mysqli=shared				\
	--with-mysql-sock=/var/run/mysqld/mysql.sock	\
	--with-pdo-sqlite=shared,/usr			\
	--with-pgsql=shared,/usr			\
	--with-snmp=shared,/usr				\
	--enable-soap=shared,/usr			\
	--with-ldap=shared				\
	--with-imap=shared				\
	--with-imap-ssl					\
	--with-mhash					\
	--with-gd=shared				\
	--with-jpeg-dir=/usr				\
	--with-png-dir=/usr				\
	--with-vpx-dir=/usr				\
	--with-openssl=shared				\
	--with-unixODBC=shared,/usr			\
	--with-pear=/usr/share/php			\
	--with-pdo-mysql=shared				\
	--with-pdo-pgsql=shared				\
	--with-curl=shared				\
	--with-sqlite3=shared,/usr			\
	--enable-maintainer-zts"

	sed -i 's|PLANE_[UVY]\]|VPX_&|;s|IMG_FMT_I420|VPX_&|' \
		ext/gd/libgd/webpimg.c
	sed -i 's/pam_start/pam_nostart/' \
		configure

	./configure		\
		$ARCH_ARGS	\
		$CONFIGURE_ARGS &&
	make $MAKEFLAGS &&
	make -j1 INSTALL_ROOT=$install install

	./configure		\
		$ARCH_ARGS	\
		$CONFIGURE_ARGS \
		--with-apxs2=/usr/bin/apxs &&
	make $MAKEFLAGS &&
	mkdir -p $install/etc/apache &&
	cp /etc/apache/httpd.conf	$install/etc/apache/httpd.conf &&
	make -j1 INSTALL_ROOT=$install install || return 1

	# Production configuration file.
	mkdir -p $install/etc

	cp $src/php.ini-production		$install/etc/php.ini || return 1
	sed -e 's|extension_dir = "./"|extension_dir = "/usr/share/php/"|' \
		-i $install/etc/php.ini

	install -Dm755 $src/sapi/cgi/php-cgi    $install/usr/bin/php-cgi

	install -Dm644 $stuff/phpinfo/index.php $install/usr/share/phpinfo/index.php
	install -Dm644 $stuff/php.desktop       $install/usr/share/applications/php.desktop
	install -Dm644 $stuff/php.png           $install/usr/share/pixmaps/php.png
}

genpkg_rules()
{
	case $PACKAGE in
		php)
			copy usr/bin/php-cgi
			DEPENDS="php-common lighttpd zlib libxml2 sqlite3 openssl"
			PROVIDE="php:lighttpd"
			;;
		php-apache)
			copy usr/share/apache/
			CAT="development|module for apache"
			DEPENDS="php-common apache libxml2 zlib"
			PROVIDE="php:apache"
			;;
		php-cherokee)
			copy usr/bin/php-cgi # FIXME! the same file in "php" package
			CAT="development|module for cherokee"
			DEPENDS="php-common cherokee libxml2 zlib"
			PROVIDE="php:cherokee"
			;;
		php-cli)
			copy usr/bin/php
			CAT="development|command line interpreter"
			DEPENDS="php-common"
			;;
		php-common)
			copy phpinfo/ php.desktop php.png php.ini
			CAT="development|common files for PHP modules"
			DEPENDS=" "
			CONFIG_FILES="/etc/php.ini"
			;;
		php-curl)
			copy curl.so
			CAT="development|curl module"
			DEPENDS="curl php"
			;;
		php-dba)
			copy dba.so
			CAT="development|dba module"
			DEPENDS=" "
			;;
		php-dev)
			copy @dev
			DEPENDS="php cyrus-sasl libldap libmysqlclient libpng \
			libpostgresqlclient libunixODBC mhash openssl jpeg \
			libmcrypt libtool libkrb5 libcomerr3 net-snmp"
			;;
		php-gd)
			copy gd.so
			CAT="development|gd module"
			DEPENDS="libpng php jpeg libvpx"
			;;
		php-imap)
			copy imap.so
			CAT="development|imap module"
			DEPENDS="php openssl"
			;;
		php-ldap)
			copy ldap.so
			CAT="development|ldap module"
			DEPENDS="libldap php openssl cyrus-sasl libkrb5 libcomerr3"
			;;
		php-mcrypt)
			copy mcrypt.so
			CAT="development|mcrypt module"
			DEPENDS="libmcrypt php libtool"
			;;
		php-mysqli)
			copy mysqli.so
			CAT="development|mysqli module"
			DEPENDS="libmysqlclient php"
			;;
		php-mysql)
			copy mysql.so
			CAT="development|mysql module"
			DEPENDS="libmysqlclient php"
			;;
		php-odbc)
			copy odbc.so
			CAT="development|ODBC module"
			DEPENDS="unixODBC php"
			;;
		php-openssl)
			copy openssl.so
			CAT="development|OpenSSL module"
			DEPENDS="php openssl"
			;;
		php-pdo-mysql)
			copy pdo_mysql.so
			CAT="development|PDO MySQL module"
			DEPENDS="php php-mysql"
			;;
		php-pdo-pgsql)
			copy pdo_pgsql.so
			CAT="development|PDO PgSQL module"
			DEPENDS="php php-mysql libpostgresqlclient"
			;;
		php-pear)
			copy etc/pear.conf usr/bin/pe* usr/share/php/
			CAT="development|PEAR libs"
			DEPENDS="php-cli"
			;;
		php-pgsql)
			copy pgsql.so
			CAT="development|postgresql module"
			DEPENDS="postgresql php"
			;;
		php-snmp)
			copy snmp.so
			CAT="development|snmp module"
			DEPENDS="net-snmp php openssl"
			;;
		php-soap)
			copy soap.so
			CAT="development|soap module"
			DEPENDS="php libxml2"
			;;
		php-sqlite)
			copy sqlite.so sqlite3.so pdo_sqlite.so
			CAT="development|sqlite module"
			DEPENDS="php sqlite3"
			;;
	esac
}

# -----------------------------------------------------------------------------
pre_install_php()
{
	if [ -z "$1" -a ! -f "/var/run/lighttpd.pid" ]
	  then
		/etc/init.d/lighttpd stop
	fi
}

post_install_php()
{
	# Enable php
	if [ -f "$1/etc/lighttpd/lighttpd.conf" ]
	  then
		[ -f "$1/usr/lib/lighttpd/mod_fastcgi.so" ] ||
		tazpkg get-install lighttpd-modules --root="$1/"

		sed \
			-e 's|#fastcgi.server = ( ".php"|fastcgi.server = ( ".php"|' \
			-e 's|#"bin-path" => "/usr/bin/php-cgi"|"bin-path" => "/usr/bin/php-cgi"|' \
			-e 's|#"socket" => "/tmp/php.socket"|"socket" => "/tmp/php.socket"\n  )))|' \
			-i "$1/etc/lighttpd/lighttpd.conf"

		grep -q mod_fastcgi "$1/etc/lighttpd/lighttpd.conf" ||
		sed \
			-e 's|server.modules = (|server.modules = (\n  "mod_fastcgi",|' \
			-i "$1/etc/lighttpd/lighttpd.conf"

		grep -q php3 "$1/etc/lighttpd/lighttpd.conf" ||
		sed \
			-e 's|for PHP.*|for PHP.\nfastcgi.map-extensions = ( ".php3" => ".php", ".php4" => ".php", ".php5" => ".php" )|' \
			-i "$1/etc/lighttpd/lighttpd.conf"

	fi

	# Start Web server.
	if [ -z "$1" -a ! -f /var/run/lighttpd.pid -a -f /etc/init.d/lighttpd ]
	  then
		/etc/init.d/lighttpd start
	fi
}

# -----------------------------------------------------------------------------
pre_installi_php_apache()
{
	if [ -z "$1" -a -f "/var/run/apache/httpd.pid" ]
	  then
		/etc/init.d/apache stop
	fi
}

post_install_php_apache()
{
	grep -q php5_module "$1/etc/apache/httpd.conf" ||
	{
		sed \
			-e 's|mod_rewrite.so|mod_rewrite.so\nLoadModule php5_module share/apache/modules/libphp5.so|' \
			-e 's|DirectoryIndex index.html|DirectoryIndex index.html index.php|' \
			-e 's|mime.types|mime.types\n    AddType application/x-httpd-php .php .php3 .php4 .php5\n    AddType application/x-httpd-php-source .phps|' \
			-i "$1/etc/apache/httpd.conf"
	}

	[ -f "$1/etc/apache/conf.d/phpinfo" ] ||
		cat > "$1/etc/apache/conf.d/phpinfo" <<EOT
<IfModule mod_alias.c>
    Alias /phpinfo /usr/share/phpinfo
</IfModule>
<DirectoryMatch /usr/share/phpinfo/>
    DirectoryIndex index.php
    Options +FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</DirectoryMatch>
EOT

	# Restart Web server.
	if [ -z "$1" -a -f "/var/run/apache/httpd.pid" ]
	  then
		/etc/init.d/apache stop
		sleep 2
	fi
	if [ -z "$1" ]; then
		/etc/init.d/apache start
	fi
}

# -----------------------------------------------------------------------------
pre_install_php_cherokee()
{
	if [ -z "$1" -a ! -f "/var/run/cherokee.pid" ]
	  then
		/etc/init.d/cherokee stop
	fi
}

post_install_php_cherokee()
{
	# Enable php
#	if [ -f "$1/etc/lighttpd/lighttpd.conf" ]; then
#	  [ -f "$1/usr/lib/lighttpd/mod_fastcgi.so" ] || \
#	  	tazpkg get-install lighttpd-modules --root="$1/"
#	  sed -e 's|#fastcgi.server = ( ".php"|fastcgi.server = ( ".php"|' \
#	    -e 's|#"bin-path" => "/usr/bin/php-cgi"|"bin-path" => "/usr/bin/php-cgi"|' \
#	    -e 's|#"socket" => "/tmp/php.socket"|"socket" => "/tmp/php.socket"\n  )))|' \
#	    -i "$1/etc/lighttpd/lighttpd.conf"
#	  grep -q mod_fastcgi "$1/etc/lighttpd/lighttpd.conf" || \
#	  	sed -e 's|server.modules = (|server.modules = (\n  "mod_fastcgi",|' \
#	  	    -i "$1/etc/lighttpd/lighttpd.conf"
#	  grep -q php3 "$1/etc/lighttpd/lighttpd.conf" || \
#	  	sed -e 's|for PHP.*|for PHP.\nfastcgi.map-extensions = ( ".php3" => ".php", ".php4" => ".php", ".php5" => ".php" )|' \
#	  	    -i "$1/etc/lighttpd/lighttpd.conf"
#	fi

	# Start Web server.
	if [ -z "$1" -a ! -f /var/run/cherokee.pid -a -f /etc/init.d/cherokee ]
	  then
		/etc/init.d/cherokee start
	fi
}

# -----------------------------------------------------------------------------
pre_install_php_common()
{
	# Backup existing php.ini
	if [ -f "$1/etc/php.ini" ]
	  then
		cp "$1/etc/php.ini" "$1/etc/php.ini.bak"
	fi
}

post_install_php_common()
{
	# Restore original php.ini
	if [ -f "$1/etc/php.ini.bak" ]
	  then
		mv -f "$1/etc/php.ini.bak" "$1/etc/php.ini"
	fi
}

# -----------------------------------------------------------------------------
pre_install_php_curl()
{
	while read daemon file
	  do
		if [ -z "$1" -a -f "/var/run/$file" ]
		  then
			/etc/init.d/$daemon stop
		fi
	  done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_curl()
{
	grep -q ^extension=curl.so "$1/etc/php.ini" ||
	sed	-e 's|extension=msql.so|extension=msql.so\nextension=curl.so|' \
		-i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file
	  do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]
		  then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]
		  then
			/etc/init.d/$daemon start
		fi
	  done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_curl()
{
	sed -i '/.*=curl.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file
	  do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]
		  then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]
		  then
			/etc/init.d/$daemon start
		fi
	  done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_dba()
{
	while read daemon file
	  do
		if [ -z "$1" -a -f "/var/run/$file" ]
		  then
			/etc/init.d/$daemon stop
		fi
	  done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_dba()
{
	grep -q ^extension=dba.so "$1/etc/php.ini" ||
	sed	-e 's|extension=msql.so|extension=msql.so\nextension=dba.so|' \
		-i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file
	  do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]
		  then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]
		  then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_dba()
{
	sed -i '/.*=dba.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file
	  do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]
		  then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]
		  then
			/etc/init.d/$daemon start
		fi
	  done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_gd()
{
	while read daemon file
	  do
		if [ -z "$1" -a -f "/var/run/$file" ]
		  then
			/etc/init.d/$daemon stop
		fi
	  done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_gd()
{
	grep -q ^extension=gd.so "$1/etc/php.ini" ||
	sed	-e 's|extension=msql.so|extension=msql.so\nextension=gd.so|' \
		-i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file
	  do
		[ -z "$1" ] || continue
		if [ -z "$1" -a -f "/var/run/$file" ]
		  then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -z "$1" -a -f /etc/init.d/$daemon ]
		  then
			/etc/init.d/$daemon start
		fi
	  done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_gd()
{
	sed -i '/.*=gd.so.*/d' "$1/etc/php.ini"

	# Start Web server.
	while read daemon file
	  do
		if [ -f /etc/init.d/$daemon -a -f "/var/run/$file" ]
		  then
			[ -z "$1" ] || continue
			if [ -z "$1" -a -f "/var/run/$file" ]
			  then
				/etc/init.d/$daemon stop
				sleep 2
			fi
			if [ -z "$1" -a -f /etc/init.d/$daemon ]
			  then
				/etc/init.d/$daemon start
			fi
		fi
	  done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_imap()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_imap()
{
	grep -q ^extension=imap.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=imap.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_imap()
{
	sed -i '/.*=imap.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_ldap()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_ldap()
{
	grep -q ^extension=ldap.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=ldap.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_ldap()
{
	sed -i '/.*=ldap.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_mcrypt()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_mcrypt()
{
	grep -q ^extension=mcrypt.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=mcrypt.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_mcrypt()
{
	sed -i '/.*=mcrypt.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_mysqli()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_mysqli()
{
	grep -q ^extension=mysqli.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=mysqli.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_mysqli()
{
	sed -i '/.*=mysqli.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_mysql()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_mysql()
{
	grep -q ^extension=mysql.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=mysql.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_mysql()
{
	sed -i '/.*=mysql.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_odbc()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_odbc()
{
	grep -q ^extension=odbc.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=odbc.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_odbc()
{
	sed -i '/.*=odbc.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_openssl()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_openssl()
{
	grep -q ^extension=openssl.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=openssl.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_openssl()
{
	sed -i '/.*=openssl.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_pdo_mysql() {
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_pdo_mysql()
{
	grep -q ^extension=pdo_mysql.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=pdo_mysql.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -z "$1" -a -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_pdo_mysql()
{
	sed -i '/.*=pdo_mysql.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -z "$1" -a -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_pdo_pgsql()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_pdo_pgsql()
{
	grep -q ^extension=pdo_pgsql.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=pdo_pgsql.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -z "$1" -a -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_pdo_pgsql()
{
	sed -i '/.*=pdo_pgsql.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -z "$1" -a -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_pear()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_pear()
{
	grep ^include_path "$1/etc/php.ini"
	sed -i 's|/php/includes"|/php/includes"\ninclude_path = ".:/usr/share/php"|' "$1/etc/php.ini"
	# Restart Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_pgsql()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_pgsql()
{
	grep -q ^extension=pgsql.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=pgsql.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_pgsql()
{
	sed -i '/.*=pgsql.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_snmp()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_snmp()
{
	grep -q ^extension=snmp.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=snmp.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_snmp()
{
	sed -i '/.*=snmp.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
pre_install_php_soap()
{
	while read daemon file; do
		if [ -z "$1" -a -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

post_install_php_soap()
{
	grep -q ^extension=soap.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=soap.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_soap()
{
	sed -i '/.*=soap.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

# -----------------------------------------------------------------------------
post_install_php_sqlite()
{
	grep -q ^extension=sqlite3.so "$1/etc/php.ini" ||
	sed -e 's|extension=msql.so|extension=msql.so\nextension=sqlite3.so|' -i "$1/etc/php.ini"

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}

pre_remove_php_sqlite()
{
	sed -i '/.*=sqlite3.so.*/d' /etc/php.ini

	# Start Web server.
	while read daemon file; do
		[ -z "$1" ] || continue
		if [ -f "/var/run/$file" ]; then
			/etc/init.d/$daemon stop
			sleep 2
		fi
		if [ -f /etc/init.d/$daemon ]; then
			/etc/init.d/$daemon start
		fi
	done <<EOT
apache   apache/httpd.pid
lighttpd lighttpd.pid
EOT
}
