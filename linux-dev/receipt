# SliTaz package receipt v2.

PACKAGE="linux-dev"
VERSION="4.9.30"
KBASEVER="4.9"
CATEGORY="development"
SHORT_DESC="Menu based tool to configure the Linux Kernel"
MAINTAINER="devel@slitaz.org"
LICENSE="GPL2"
WEB_SITE="https://www.kernel.org/"

TARBALL="linux-$KBASEVER.tar.xz"
WGET_URL="https://www.kernel.org/pub/linux/kernel/v4.x/$TARBALL"

DEPENDS="ncurses"
BUILD_DEPENDS="python-sphinx perl xmlto util-linux-getopt docbook-xsl \
coreutils-operations findutils ncurses-dev patch bash"
SPLIT="linux-dev linux-man linux-api-headers"
SIBLINGS="linux"
COOKOPTS="!pngz !svgz !uiz"

if [ "$KBASEVER" != "${VERSION%.0}" ]; then
	PATCH="$(dirname $WGET_URL)/patch-$VERSION.xz"
	EXTRA_SOURCE_FILES="$(basename $PATCH)"
fi

# Rules to configure and make the package.
compile_rules()
{
	# Update sources to the $VERSION using base sources ($KBASEVER) and patch
	if [ "$KBASEVER" != "${VERSION%.0}" ]; then
		[ -s $SRC/$(basename $PATCH) ] || wget $PATCH -O $SRC/$(basename $PATCH)
		# don't patch twice for `cook $PACKAGE --continue`
		if [ ! -f "done.patch-$VERSION" ]; then
			xzcat $SRC/$(basename $PATCH) | patch -Np1
			touch done.patch-$VERSION
		fi
	fi

	make mrproper &&
	make headers_check &&
	make INSTALL_HDR_PATH=$DESTDIR/usr headers_install

	find $install \( -name .install -o -name ..install.cmd \) -delete

	# Get and apply Aufs patches
	. $WOK/linux/stuff/tools/aufs-patches

	make defconfig
	sed -i 's/^menuconfig:.*/z&\n\techo menuconfig is ready\n\n&/' \
		scripts/kconfig/Makefile
	make zmenuconfig

	p="$install/usr/src/linux-$VERSION-slitaz"
	mkdir -p $p
	cp -a $src/* $src/.config $p

	mkdir -p $install/usr/bin
	mv $p/scripts/kconfig/mconf $install/usr/bin
	cat > $install/usr/bin/menuconfig <<EOT
#!/bin/sh
p=\$PWD
cd ../src/linux-$VERSION-slitaz
SRCARCH=x86 ARCH=i386 KERNELVERSION=$VERSION \$p/mconf Kconfig
EOT
	chmod a+x $install/usr/bin/menuconfig

	patch -p1 -i $stuff/installmandocs.patch

	make mandocs && make installmandocs
}


# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	case $PACKAGE in
	linux-dev)
		copy Kconfig* mconf menuconfig .config
		;;
	linux-man)
		mkdir -p $fs/usr/share
		cp -a $install/usr/share/man $fs/usr/share
		;;
	linux-api-headers)
		CAT="development|Kernel headers sanitized for use in userspace"
		PROVIDE="linux-headers linux64-api-headers linux64-headers"
		copy @dev
		;;
	esac
}
