# SliTaz package receipt v2.

PACKAGE="gcc6"
VERSION="6.4.0"
CATEGORY="development"
SHORT_DESC="The GNU Compiler Collection"
MAINTAINER="pankso@slitaz.org"
LICENSE="GPL2"
WEB_SITE="http://gcc.gnu.org/"
REPOLOGY="gcc"

TARBALL="gcc-$VERSION.tar.xz"
WGET_URL="ftp://gcc.gnu.org/pub/gcc/releases/gcc-$VERSION/$TARBALL"

# We need gawk since busybox awk is not sufficient. We have BUILD_DEPENDS
# for cookutils that are not used by tazwok/cook-toolchain since it installs
# and uses its own copy.
BUILD_DEPENDS="mpc-library-dev mpfr-dev gmp-dev elfutils-dev zlib-dev"
SPLIT="gcc6-lib-base"

compile_rules() {
	case $ARCH in
		arm*)
			ARCH_ARGS="--with-tune=armv6"
			;;
		i?86)
			ARCH_ARGS="--with-tune=$ARCH"
			export CFLAGS="-march=i486 -Os -pipe"
			export CXXFLAGS="$CFLAGS"
			;;
		x86_64)
			ARCH_ARGS="--with-tune=nocona"
			export CFLAGS="-march=nocona -Os -pipe"
			export CXXFLAGS="$CFLAGS"
			;;
	esac

	echo "CFLAGS   : $CFLAGS"
	echo "LDFLAGS  : $LDFLAGS"

	pkgversion="SliTaz"
	languages="c,c++"

	# Use libiberty.a from binutils.
	sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in || return 1

	sed -i 's/^T_CFLAGS =$/& -fomit-frame-pointer/' gcc/Makefile.in

	mkdir -p ../gcc-build && cd ../gcc-build

	$src/configure \
		--libexecdir=/usr/lib \
		--enable-nls \
		--enable-languages=${languages} \
		--enable-shared \
		--with-system-zlib \
		--enable-clocale=gnu \
		--enable-objc-gc \
		--enable-__cxa_atexit \
		--enable-lto \
		--enable-threads=posix \
		--disable-bootstrap \
		--program-suffix=-6 \
		--libdir=/usr/libgcc6 \
		--with-pkgversion="$pkgversion" \
		--disable-multilib \
		$ARCH_ARGS \
		$CONFIGURE_ARGS &&
	make && make install
}

genpkg_rules() {
	case $PACKAGE in
		gcc6)
			mkdir -p  $fs/usr/share
			cp -a $install/usr/bin $fs/usr

			# Copy all libs. Do not hide gcc-lib-base.
			cp -a $install/usr/lib* $fs/usr

			# Include files.
			cp -a $install/usr/include $fs/usr

			# Remove build directory.
			rm -rf $WOK/$PACKAGE/source/$PACKAGE-build
			rm -rf $WOK/$PACKAGE/$PACKAGE-build
			DEPENDS="binutils libgomp libobjc gcc-lib-base mpc-library elfutils"
			TAGS="compiler C C++"
			;;
		gcc6-lib-base)
			mkdir -p $fs/usr/lib
			cp -a $install/usr/libgcc61/libgcc_s.so* $fs/usr/lib
			cp -a $install/usr/libgcc61/libstdc++.so* $fs/usr/lib
			rm -f $fs/usr/lib/*-gdb.py
			CAT="development|base libraries, libgcc_s and libstdc++"
			PROVIDE="gcc-lib-base"
			;;
	esac
}

post_remove_gcc61_lib_base() {
	cd "$1/usr/lib"
	ln -s libstdc++.so.6.*.* libstdc++.so.6
	ln -s libstdc++.so.6.*.* libstdc++.so
	cd - >/dev/null
}
