# SliTaz package receipt.

PACKAGE="glibc"
VERSION="2.24"
CATEGORY="meta"
SHORT_DESC="The GNU C libraries. This package is used to compile the libc."
MAINTAINER="pankso@slitaz.org"
LICENSE="GPL2"
WEB_SITE="http://www.gnu.org/software/libc/"

TARBALL="$PACKAGE-$VERSION.tar.gz"
WGET_URL="$GNU_MIRROR/$PACKAGE/$TARBALL"

DEPENDS="glibc-base glibc-locale glibc-dev"
BUILD_DEPENDS="linux-api-headers autoconf bash advancecomp gawk gettext bison \
texinfo"
SPLIT="glibc-base glibc-locale-glibc-dev"

# Rules to compile & install the temporary toolchain.
cook_tmp_toolchain()
{
	unset CFLAGS CXXFLAGS
	case $ARCH in
		i386|i486)
			echo "CFLAGS += -O2 -march=i486 -mtune=i486" > configparms ;;
		*)
			echo "CFLAGS += -O2 -march=$ARCH -mtune=$ARCH" > configparms ;;
	esac

	{
		# Build in a separate directory.
		mkdir glibc-build
		cd    glibc-build

		../configure \
			--host=$HOST_SYSTEM \
			--build=$($src/scripts/config.guess) \
			--disable-profile \
			--enable-add-ons \
			--enable-kernel=2.6.32 \
			--with-headers=/tools/include \
			libc_cv_forced_unwind=yes \
			libc_cv_c_cleanup=yes &&
		make -j1 &&
		make install
	} || return 1

	# Link compiler to this new glibc.
	SPECS=$(dirname $($HOST_SYSTEM-gcc -print-libgcc-file-name))/specs
	$HOST_SYSTEM-gcc -dumpspecs | sed \
		-e 's@/lib\(64\)\?/ld@/tools&@g' \
		-e "/^\*cpp:$/{n;s,$, -isystem /tools/include,}" > $SPECS
	unset SPECS
}

# Rules to configure and make the package.
compile_rules()
{
	# Glibc needs ld.so.conf in the install destdir.
	mkdir -p $WOK/$PACKAGE/install/etc
	touch    $WOK/$PACKAGE/install/etc/ld.so.conf

	# Read the INSTALL file in glibc. Also Glibc dont build with -Os flag.
	# --enale-kernel use latest SliTaz Kernel version. From Glibc INSTALL:
	# "The higher the VERSION number is, the less compatibility code is
	# added, and the faster the code gets."
	unset CFLAGS CXXFLAGS
	case "$ARCH" in
		i386|i486)
			echo "CFLAGS += -O2 -march=i486 -mtune=i486" > configparms ;;
		*)
			echo "CFLAGS += -O2 -march=$ARCH -mtune=$ARCH" > configparms ;;
	esac

	# Glibc FHS Patch - LFS 7.10
	patch -p1 -i $stuff/glibc-2.24-fhs-1.patch

	{
		mkdir build
		cd    build
		$src/configure \
			--disable-profile \
			--enable-add-ons \
			--enable-kernel=2.6.32 \
			--libexecdir=/usr/lib/glibc \
			--build=$HOST_SYSTEM \
			--host=$HOST_SYSTEM \
			--target=$BUILD_SYSTEM &&
		make -j1 && make install_root=$DESTDIR install
	} || return 1

	action 'Recompress charmaps...'
	local size0=$(ls -l $install/usr/share/i18n/charmaps/*.gz | awk '{s+=$5}END{print s}')
	local time0=$(date +%s)
	for i in $install/usr/share/i18n/charmaps/*.gz; do
		advdef -z4q $i
	done
	local size1=$(ls -l $install/usr/share/i18n/charmaps/*.gz | awk '{s+=$5}END{print s}')
	local time1=$(date +%s)
	status
	comp_summary "$time0" "$time1" "$size0" "$size1"

	# If temporary toolchain was previously used, switch to regular toolchain.
	if [ ! -d /tools ]; then
		mv /tools/bin/ld /tools/bin/ld-old
		mv /tools/$(gcc -dumpmachine)/bin/ld /tools/$(gcc -dumpmachine)/bin/ld-old
		mv /tools/bin/ld-new /tools/bin/ld
		ln -s /tools/bin/ld /tools/$(gcc -dumpmachine)/bin/ld
		gcc -dumpspecs | sed -e 's@/tools@@g' \
			-e '/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}' \
			-e '/\*cpp:/{n;s@$@ -isystem /usr/include@}' > \
			$(dirname $(gcc --print-libgcc-file-name))/specs
	fi
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	LOCALE=""
	mkdir -p $fs/var

	# check install
	ls $install/lib/ | tr '\n' ' ' | fold -s
	echo
}
