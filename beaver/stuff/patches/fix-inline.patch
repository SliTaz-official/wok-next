This fixes link errors:

  beaver-editor.o: In function `auto_indent_on_insert':
  editor.c:(.text+0x157): undefined reference to `starts_string'
  beaver-editor.o: In function `search_for_keyword_correctly':
  editor.c:(.text+0x7c7): undefined reference to `is_matching_keyword'
  beaver-editor.o: In function `markup_syhi_range':
  editor.c:(.text+0xd33): undefined reference to `starts_string'
  editor.c:(.text+0xdb8): undefined reference to `starts_string'
  editor.c:(.text+0xe3d): undefined reference to `starts_string'
  editor.c:(.text+0xec2): undefined reference to `starts_string'
  editor.c:(.text+0xf47): undefined reference to `starts_string'
  beaver-editor.o:editor.c:(.text+0xfd0): more undefined references to `starts_string' follow
  beaver-editor.o: In function `markup_syhi_range':
  editor.c:(.text+0x1288): undefined reference to `refresh_markers'
  editor.c:(.text+0x137b): undefined reference to `refresh_markers'
  beaver-editor.o: In function `search_for_keyword':
  editor.c:(.text+0x8f4): undefined reference to `search_for_keyword_fastly'

As gcc5 doc about "Different semantics for inline functions":

  > C99 extern inline: An externally visible function is generated; \
  > same as GNU89 inline.

  > To fix this, either mark the function foo as extern, or add the \
  > following declaration: extern inline int foo (void);

(from https://gcc.gnu.org/gcc-5/porting_to.html)

--- a/src/editor.c
+++ b/src/editor.c
@@ -487,7 +487,7 @@
 /* preconditions:  iter points to possible start of interesting word  
 postconditions: end is set to the end of the word in the buffer if it was found.
 if word found, returns TRUE, else FALSE*/
-inline gboolean starts_string (gchar * text, gint i, gchar * word, gint * end)
+extern inline gboolean starts_string (gchar * text, gint i, gchar * word, gint * end)
 {
 	gunichar ch;
 	gunichar k;
@@ -521,7 +521,7 @@
 
 
 /* returns color index of match, or -1 if none */
-inline gint is_matching_keyword (gint Lg, const gchar * str)
+extern inline gint is_matching_keyword (gint Lg, const gchar * str)
 {
 	gint rv = -1;
 	gpointer val;
@@ -537,7 +537,7 @@
 }
 
 
-inline void refresh_markers (GtkTextBuffer * Buffer)
+extern inline void refresh_markers (GtkTextBuffer * Buffer)
 {
 	gint CurrentPage;
 	gint Lg;
@@ -894,7 +894,7 @@
 END_FCN}
 
 
-inline void search_for_keyword_fastly (gint page, GtkTextBuffer * Buffer,
+extern inline void search_for_keyword_fastly (gint page, GtkTextBuffer * Buffer,
 									   gchar * text, gint * i, gint offset,
 									   gint Lg)
 {
